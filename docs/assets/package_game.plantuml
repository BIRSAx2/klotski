@startuml

!include https://raw.githubusercontent.com/patrik-csak/one-dark-plantuml-theme/v1.0.1/theme.puml

top to bottom direction
skinparam linetype ortho

class BigBlock {
  + BigBlock(Coordinate):
}
class Block {
  + Block(Coordinate, int, int, BlockType):
  + Block(Coordinate, int, int):
  - height: int
  - type: BlockType
  - width: int
  - location: Coordinate
  + occupiedSpaces(): List<Coordinate>
  - getBlockTypeBySize(Block): BlockType
  + hashCode(): int
  + toString(): String
  + getOccupiedLocations(Coordinate): List<Coordinate>
  + toJson(): String
  + fromJson(String): Block
  + clone(): Block
  + equals(Object): boolean
   location: Coordinate
   type: BlockType
   width: int
   height: int
   icon: String
   x: int
   y: int
   occupiedLocations: List<Coordinate>
}
enum BlockType << enumeration >> {
  + BlockType():
  + valueOf(String): BlockType
  + values(): BlockType[]
}
class Coordinate {
  + Coordinate(int, int):
  - x: int
  - y: int
  + add(Coordinate): Coordinate
  + fromJson(String): Coordinate
  + of(int, int): Coordinate
  + add(int, int): Coordinate
  + hashCode(): int
  + move(Direction): Coordinate
  + equals(Object): boolean
  + toString(): String
  + clone(): Coordinate
  + toJson(): String
   x: int
   y: int
}
enum Direction << enumeration >> {
  + Direction():
  + valueOf(String): Direction
  + values(): Direction[]
}
class HorizontalBlock {
  + HorizontalBlock(Coordinate):
}
class KlotskiSolver {
  + KlotskiSolver(State):
  - pathToSolution: List<State>
  - getNextStates(int[]): List<int[]>
  - bfs(int, Queue<int[]>, int, Set<Long>, Map<int[], int[]>): int
  - reconstructPath(Map<int[], int[]>, int[]): List<State>
  - isOnLeftBorder(int): boolean
  - log2(int): int
  - getMirroredState(int[]): int[]
  - isValidBoard(int[]): boolean
  - isOnRightBorder(int): boolean
  + minSteps(): int
  - compress(int[]): Long
   pathToSolution: List<State>
}
class Level {
  + Level(String, Block[]):
  - board: Block[]
  - name: String
  + fromJson(String): List<Level>
  + toString(): String
  + toState(): State
   name: String
   board: Block[]
}
class SavesManager {
  + SavesManager(String):
  + SavesManager():
  - getSaveFilePath(String): String
  + loadStateByPath(String): State
  + loadLevels(String): List<Level>
  + deleteSave(String): void
  + loadStateByName(String): State
  - generateFilename(): String
  + saveState(State, String): void
  + loadLevelsFromDefaultPath(): List<Level>
  - createSaveDirectoryIfNotExists(): void
  + saveState(State): void
  + getMoves(String): int
   savedStatePaths: HashMap<String, Integer>
}
class SmallBlock {
  + SmallBlock(Coordinate):
}
class State {
  - State():
  - blocks: HashMap<Coordinate, Block>
  - moves: int
  + fromJson(String): State
  + toBitBoard(): int[]
  + toString(): String
  + fromDefaultConfiguration(): State
  + createBlockFromBitMask(int): Block?
  + moveBlock(Block, Direction): boolean
  + toJson(): String
  + fromRandomConfiguration(): State
  - isValidBlock(Coordinate, int, int): boolean
  + fromBitBoard(int[]): State
  + equals(Object): boolean
  + clone(): State
  + createBitMaskForBlock(Block): int
  + isValidCoordinate(Coordinate): boolean
  + canMoveBlock(Block, Direction): boolean
   moves: int
   blocks: Block[]
   solved: boolean
}
class VerticalBlock {
  + VerticalBlock(Coordinate):
}

BigBlock         -[#000082,plain]-^  Block
Block           "1" *-[#595959,plain]-> "type\n1" BlockType
Block           "1" *-[#595959,plain]-> "location\n1" Coordinate
BlockType        +-[#820000,plain]-  Block
HorizontalBlock  -[#000082,plain]-^  Block
KlotskiSolver    -[#595959,dashed]->  BigBlock        : "«create»"
KlotskiSolver   "1" *-[#595959,plain]-> "pathToSolution\n*" State
Level           "1" *-[#595959,plain]-> "board\n*" Block
SmallBlock       -[#000082,plain]-^  Block
State            -[#595959,dashed]->  BigBlock        : "«create»"
State            -[#595959,dashed]->  Block           : "«create»"
State           "1" *-[#595959,plain]-> "blocks\n*" Block
State           "1" *-[#595959,plain]-> "blocks\n*" Coordinate
State            -[#595959,dashed]->  Coordinate      : "«create»"
State            -[#595959,dashed]->  HorizontalBlock : "«create»"
State           "1" *-[#595959,plain]-> "savesManager\n1" SavesManager
State            -[#595959,dashed]->  SavesManager    : "«create»"
State            -[#595959,dashed]->  SmallBlock      : "«create»"
State            -[#595959,dashed]->  VerticalBlock   : "«create»"
VerticalBlock    -[#000082,plain]-^  Block
@enduml
